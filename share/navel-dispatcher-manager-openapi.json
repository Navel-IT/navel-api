{
    "swagger": "2.0",
    "info": {
        "title": "navel-dispatcher-manager",
        "description": "https://github.com/navel-it/navel-dispatcher-manager",
        "version": "0.1.0",
        "contact": {
            "name": "Yoann Le Garff, Nicolas Boquet and Yann Le Bras"
        },
        "license": {
            "name": "Apache License, Version 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/api",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/status": {
            "get": {
                "summary": "Show product status",
                "operationId": "showStatus",
                "x-mojo-to": "Controller::OpenAPI::Product#show_status",
                "tags": [
                    "status"
                ],
                "responses": {
                    "200": {
                        "description": "Product status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "version"
                            ],
                            "properties": {
                                "version": {
                                    "type": [
                                        "string",
                                        "integer",
                                        "number"
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/save_configuration": {
            "put": {
                "summary": "Save configuration",
                "operationId": "saveConfiguration",
                "x-mojo-to": "Controller::OpenAPI::Configuration#save",
                "tags": [
                    "backup",
                    "configuration"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/meta": {
            "get": {
                "summary": "Show meta configuration",
                "operationId": "showMeta",
                "x-mojo-to": "Controller::OpenAPI::Meta#show",
                "tags": [
                    "meta"
                ],
                "responses": {
                    "200": {
                        "description": "Meta configuration",
                        "schema": {
                            "$ref": "#/definitions/meta"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "summary": "List job types",
                "operationId": "listJobTypes",
                "x-mojo-to": "Controller::OpenAPI::Job#list_types",
                "tags": [
                    "job"
                ],
                "responses": {
                    "200": {
                        "description": "Job types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/jobs/{type}": {
            "get": {
                "summary": "List job names by job type",
                "operationId": "listJobNamesByJobType",
                "x-mojo-to": "Controller::OpenAPI::Job#list_by_type",
                "tags": [
                    "job"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job names by job type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/jobs/{type}/{name}": {
            "get": {
                "summary": "Show the properties of a job",
                "operationId": "showJobByTypeAndName",
                "x-mojo-to": "Controller::OpenAPI::Job#show_by_type_and_name",
                "tags": [
                    "job"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/type"
                    },
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job",
                        "schema": {
                            "$ref": "#/definitions/job"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/jobs/{type}/{name}/enable": {
            "put": {
                "summary": "Enable a job",
                "operationId": "enableJobByTypeAndName",
                "x-mojo-to": "Controller::OpenAPI::Job#enable_by_type_and_name",
                "tags": [
                    "job"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/type"
                    },
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/jobs/{type}/{name}/disable": {
            "put": {
                "summary": "Disable a job",
                "operationId": "disableJobByTypeAndName",
                "x-mojo-to": "Controller::OpenAPI::Job#disable_by_type_and_name",
                "tags": [
                    "job"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/type"
                    },
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/jobs/{type}/{name}/execute": {
            "put": {
                "summary": "Execute a job",
                "operationId": "executeJobByTypeAndName",
                "x-mojo-to": "Controller::OpenAPI::Job#execute_by_type_and_name",
                "tags": [
                    "job"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/type"
                    },
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers": {
            "get": {
                "summary": "List dispatcher names",
                "operationId": "listDispatcherNames",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#list",
                "tags": [
                    "dispatcher"
                ],
                "responses": {
                    "200": {
                        "description": "Dispatcher names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            },
            "post": {
                "summary": "Create a dispatcher",
                "operationId": "createDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#create",
                "tags": [
                    "dispatcher"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/definition"
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/oKKO"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "409": {
                        "$ref": "#/responses/resourceAlreadyExists"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}": {
            "get": {
                "summary": "Show the properties of a dispatcher",
                "operationId": "showDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show",
                "tags": [
                    "dispatcher"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dispatcher",
                        "schema": {
                            "$ref": "#/definitions/dispatcher"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            },
            "put": {
                "summary": "Update a dispatcher",
                "operationId": "updateDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#update",
                "tags": [
                    "dispatcher"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    },
                    {
                        "$ref": "#/parameters/baseDefinition"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a dispatcher",
                "operationId": "deleteDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#delete",
                "tags": [
                    "dispatcher"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}/worker": {
            "get": {
                "summary": "Show informations on the worker of a dispatcher",
                "operationId": "showWorkerStatusOfADispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show_worker_status",
                "tags": [
                    "dispatcher",
                    "worker"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker's informations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "healthy",
                                "initialized"
                            ],
                            "properties": {
                                "healthy": {
                                    "type": [
                                        "integer",
                                        "boolean"
                                    ],
                                    "minimum": 0,
                                    "maximum": 1
                                },
                                "initialized": {
                                    "type": [
                                        "integer",
                                        "boolean"
                                    ],
                                    "minimum": 0,
                                    "maximum": 1
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}/worker/filler/connection": {
            "get": {
                "summary": "Show the connection status of the filler associated with a dispatcher",
                "operationId": "showFillerConnectionStatusAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show_associated_filler_connection_status",
                "tags": [
                    "dispatcher",
                    "worker",
                    "filler",
                    "connection"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filler connection status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "active_connections"
                            ],
                            "properties": {
                                "active_connections": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}/worker/consumer/queue": {
            "get": {
                "summary": "Show informations on the consumer queue associated with a dispatcher",
                "operationId": "showConsumerQueueAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show_associated_consumer_queue",
                "tags": [
                    "dispatcher",
                    "worker",
                    "consumer",
                    "queue"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/queueStatus"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            },
            "delete": {
                "summary": "Delete all events in the consumer queue associated with a dispatcher",
                "operationId": "deleteAllEventsFromConsumerQueueAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#delete_all_events_from_associated_consumer_queue",
                "tags": [
                    "dispatcher",
                    "consumer",
                    "queue"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}/worker/consumer/connection": {
            "get": {
                "summary": "Show the connection status of the consumer associated with a dispatcher",
                "operationId": "showConsumerConnectionStatusAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show_associated_consumer_connection_status",
                "tags": [
                    "dispatcher",
                    "worker",
                    "consumer",
                    "connection"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/couldBeConnectableConnectionStatus"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}/worker/publisher/queue": {
            "get": {
                "summary": "Show informations on the publisher queue associated with a dispatcher",
                "operationId": "showPublisherQueueAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show_associated_publisher_queue",
                "tags": [
                    "dispatcher",
                    "worker",
                    "publisher",
                    "queue"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/queueStatus"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            },
            "delete": {
                "summary": "Delete all events in the publisher queue associated with a dispatcher",
                "operationId": "deleteAllEventsFromPublisherQueueAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#delete_all_events_from_associated_publisher_queue",
                "tags": [
                    "dispatcher",
                    "publisher",
                    "queue"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/oKKO"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        },
        "/dispatchers/{name}/worker/publisher/connection": {
            "get": {
                "summary": "Show the connection status of the publisher associated with a dispatcher",
                "operationId": "showPublisherConnectionStatusAssociatedWithDispatcher",
                "x-mojo-to": "Controller::OpenAPI::Dispatcher#show_associated_publisher_connection_status",
                "tags": [
                    "dispatcher",
                    "worker",
                    "publisher",
                    "connection"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/couldBeConnectableConnectionStatus"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/responses/resourceCouldNotBeFound"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedError"
                    }
                }
            }
        }
    },
    "definitions": {
        "meta": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "dispatchers"
            ],
            "properties": {
                "dispatchers": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "definitions_from_file",
                        "maximum"
                    ],
                    "properties": {
                        "definitions_from_file": {
                            "type": "string",
                            "minLength": 1
                        },
                        "maximum": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                }
            }
        },
        "job": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "name",
                "type",
                "backend",
                "enabled",
                "singleton",
                "running"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1
                },
                "type": {
                    "type": "string",
                    "minLength": 1
                },
                "backend": {
                    "type": "string",
                    "minLength": 1
                },
                "enabled": {
                    "type": [
                        "integer",
                        "boolean"
                    ],
                    "minimum": 0,
                    "maximum": 1
                },
                "singleton": {
                    "type": [
                        "integer",
                        "boolean"
                    ],
                    "minimum": 0,
                    "maximum": 1
                },
                "running": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "baseDispatcher": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1
                },
                "filler_tls": {
                    "type": [
                        "integer",
                        "boolean"
                    ],
                    "minimum": 0,
                    "maximum": 1
                },
                "filler_tls_ctx": {
                    "type": "object",
                    "properties": {}
                },
                "filler_user": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "minLength": 1
                },
                "filler_password": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "filler_host": {
                    "type": "string",
                    "minLength": 1
                },
                "filler_port": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                },
                "filler_basepath": {
                    "type": "string",
                    "minLength": 1
                },
                "consumer_queue_size" : {
                    "type": "integer",
                    "minimum": 0
                },
                "consumer_backend": {
                    "type": "string",
                    "minLength": 1
                },
                "consumer_backend_input": {},
                "publisher_queue_size" : {
                    "type": "integer",
                    "minimum": 0
                },
                "publisher_backend": {
                    "type": "string",
                    "minLength": 1
                },
                "publisher_backend_input": {}
            }
        },
        "dispatcher": {
            "allOf": [
                {
                    "$ref": "#/definitions/baseDispatcher"
                },
                {
                    "type": "object",
                    "required": [
                        "name",
                        "filler_tls",
                        "filler_tls_ctx",
                        "filler_user",
                        "filler_password",
                        "filler_host",
                        "filler_port",
                        "filler_basepath",
                        "consumer_queue_size",
                        "consumer_backend",
                        "consumer_backend_input",
                        "publisher_queue_size",
                        "publisher_backend",
                        "publisher_backend_input"
                    ]
                }
            ]
        },
        "oKKO": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "ok",
                "ko"
            ],
            "properties": {
                "ok": {
                    "type": "array",
                    "items": {}
                },
                "ko": {
                    "type": "array",
                    "items": {}
                }
            }
        }
    },
    "parameters": {
        "type": {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "name": {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "baseDefinition": {
            "name": "baseDefinition",
            "in": "body",
            "required": true,
            "schema": {
                "$ref": "#/definitions/baseDispatcher"
            }
        },
        "definition": {
            "name": "definition",
            "in": "body",
            "required": true,
            "schema": {
                "$ref": "#/definitions/dispatcher"
            }
        }
    },
    "responses": {
        "queueStatus": {
            "description": "Queue status",
            "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "amount_of_events"
                ],
                "properties": {
                    "amount_of_events": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            }
        },
        "couldBeConnectableConnectionStatus": {
            "description": "Connection status",
            "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "connectable",
                    "connecting",
                    "connected",
                    "disconnecting",
                    "disconnected"
                ],
                "properties": {
                    "connectable": {
                        "type": [
                            "integer",
                            "boolean"
                        ],
                        "minimum": 0,
                        "maximum": 1
                    },
                    "connecting": {
                        "type": [
                            "integer",
                            "boolean"
                        ],
                        "minimum": 0,
                        "maximum": 1
                    },
                    "connected": {
                        "type": [
                            "integer",
                            "boolean"
                        ],
                        "minimum": 0,
                        "maximum": 1
                    },
                    "disconnecting": {
                        "type": [
                            "integer",
                            "boolean"
                        ],
                        "minimum": 0,
                        "maximum": 1
                    },
                    "disconnected": {
                        "type": [
                            "integer",
                            "boolean"
                        ],
                        "minimum": 0,
                        "maximum": 1
                    }
                }
            }
        },
        "oKKO": {
            "description": "OK and KO messages",
            "schema": {
                "$ref": "#/definitions/oKKO"
            }
        },
        "badRequest": {
            "description": "Incorrect request",
            "schema": {
                "$ref": "#/definitions/oKKO"
            }
        },
        "resourceCouldNotBeFound": {
            "description": "This resource could not be found",
            "schema": {
                "$ref": "#/definitions/oKKO"
            }
        },
        "resourceAlreadyExists": {
            "description": "This resource already exists",
            "schema": {
                "$ref": "#/definitions/oKKO"
            }
        },
        "unexpectedError": {
            "description": "Unexpected Error",
            "schema": {
                "$ref": "#/definitions/oKKO"
            }
        }
    }
}
